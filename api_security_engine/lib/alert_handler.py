from api_security_engine.lib.models import ThreatSeverity, SecurityEngineAlert


class AlertHandler:
    def __init__(self, alert_severity: ThreatSeverity) -> None:
        """
        The AlertHandler class handles security alerts upon threat detection based on their severity.
        :param alert_severity:
        """
        self.alert_severity = alert_severity

    async def handle_alert_by_severity(self, alert: SecurityEngineAlert) -> None:
        """
        The function handles an alert based on its severity level. In case the alert severity is lower than
        alert_severity in the handler, the alert will be skipped by handler.

        :param alert: The `alert` parameter is an instance of the `SecurityEngineAlert` class. It represents a security
        alert generated by a security engine upon threat detection.
        :type alert: SecurityEngineAlert
        """
        if alert.threat_details.severity >= self.alert_severity:
            await self.handle_alert(alert)

    async def handle_alert(self, alert: SecurityEngineAlert) -> None:
        """
        The function "handle_alert" takes in a SecurityEngineAlert object as a parameter and does an unspecified
        processing with it.

        Examples: send to Slack, send to Kafka topix, log alert, send as email etc..

        :param alert: The "alert" parameter is an instance of the SecurityEngineAlert class. It represents an alert
        generated by a security engine
        :type alert: SecurityEngineAlert
        """
        ...
