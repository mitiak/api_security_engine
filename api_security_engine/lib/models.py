from enum import Enum
from typing import Any

from pydantic import BaseModel


class SecurityEngineRequest(BaseModel):
    """
    Security engine is agnostic to web framework, therefore it uses a unified request type (SecurityEngineRequest)
    that should be constructed for every Python web framework accordingly.

    Additional request fields should be added here for more detailed request analysis
    """
    body: str
    url: str


class ThreatSeverity(Enum):
    """
    The above class defines an enumeration for threat severity with comparison methods implemented.
    """
    low = 1
    medium = 2
    high = 3

    def __lt__(self, other: Any) -> Any:
        if self.__class__ is other.__class__:
            return self.value < other.value
        return NotImplemented

    def __le__(self, other: Any) -> Any:
        if self.__class__ is other.__class__:
            return self.value <= other.value
        return NotImplemented

    def __eq__(self, other: Any) -> Any:
        if self.__class__ is other.__class__:
            return self.value == other.value
        return NotImplemented

    def __ne__(self, other: Any) -> Any:
        if self.__class__ is other.__class__:
            return self.value != other.value
        return NotImplemented

    def __gt__(self, other: Any) -> Any:
        if self.__class__ is other.__class__:
            return self.value > other.value
        return NotImplemented

    def __ge__(self, other: Any) -> Any:
        if self.__class__ is other.__class__:
            return self.value >= other.value
        return NotImplemented


class ThreatDetails(BaseModel):
    """
    The class ThreatDetails represents the details of a threat that was detected by security engine module.
    In case of threat detection the details are propagated in alert to alert handlers.

    More fields can be added here for more detailed module result.
    """
    severity: ThreatSeverity
    description: str = ""


class SecurityEngineAlert(BaseModel):
    """
    The `SecurityEngineAlert` class represents an alert generated by a security engine, containing information such as
    request, module name, timestamp, and threat details.
    Alert is propagated to registered alert handlers upon threat detection.

    More fields can be added here for more detailed alert information.
    """
    request: SecurityEngineRequest
    module_name: str
    timestamp: float    # Detection timestamp
    threat_details: ThreatDetails
