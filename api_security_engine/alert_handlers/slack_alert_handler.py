import requests  # type: ignore

from api_security_engine.lib.alert_handler import AlertHandler
from api_security_engine.lib.models import ThreatSeverity, SecurityEngineAlert


class SlackAlertHandler(AlertHandler):
    def __init__(
            self,
            alert_severity: ThreatSeverity,
            webhook_url: str,
    ) -> None:
        """
        The function initializes an object with a given alert severity and Slack webhook URL.
        Incoming Webhooks are a simple way to post messages from apps into Slack.
        Creating an Incoming Webhook gives you a unique URL to which you send a JSON payload with the message text and
        some options.

        :param alert_severity: The `alert_severity` parameter is of type `ThreatSeverity`. It is used to specify the
        severity level of the alert
        :type alert_severity: ThreatSeverity

        :param webhook_url: The Slack `webhook_url` parameter is a string that represents the URL of the webhook to which the
        alerts will be sent. A webhook is a way for an application to provide real-time information to another application
        by sending an HTTP POST request to a specified URL. In this case, the webhook URL is
        :type webhook_url: str
        """
        super().__init__(alert_severity)
        self.webhook_url = webhook_url

    async def handle_alert(self, alert: SecurityEngineAlert) -> None:
        """
        The function `handle_alert` sends a POST request to a Slack webhook URL with a JSON payload containing a
        security alert.

        :param alert: The `alert` parameter is an instance of the `SecurityEngineAlert` class. It represents a security
        alert generated by a security engine
        :type alert: SecurityEngineAlert
        """
        requests.post(self.webhook_url, data=alert.model_dump_json(), headers={"Content-Type": "application/json"})
